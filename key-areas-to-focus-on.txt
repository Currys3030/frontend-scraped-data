Key areas to focus on ​

Front end fundamentals ​

Strong front end engineering fundamentals are essential. Be prepared for:

HTML: Semantic HTML, accessibility (ARIA attributes), HTML5 features. CSS: Layout (Flexbox, Grid), Box Model, specificity, inheritance, responsive design, animations, performance optimization. JavaScript: Core concepts: this , closures, prototypes, event loop, hoisting, var , let , const , scope. ES6+ features: Promises, async/await, arrow functions, destructuring, spread/rest operators, Maps, Sets. DOM manipulation: Efficiently interacting with the DOM, event handling, event delegation. Browser APIs: Local Storage, Session Storage, Web Workers, Geolocation, etc. Performance: Debouncing, throttling, virtual DOM (if discussing frameworks), critical rendering path. Data structures & algorithms: Be comfortable with common data structures (arrays, strings, linked lists, trees, graphs) and algorithms (sorting, searching) and be able to implement them efficiently in JavaScript. Web performance: How to optimize page load times, rendering, and responsiveness. Accessibility (a11y): Understanding WAI-ARIA, semantic HTML, keyboard navigation, and how to build inclusive web experiences. Security: XSS, CSRF, CORS, secure coding practices for the front end. Front end frameworks (e.g., React, Angular, Vue.js): While the focus is often on vanilla JavaScript for coding, be prepared to discuss component lifecycle, state management, and performance optimizations within your chosen framework.

System design ​

This round assesses your ability to design scalable and performant front end applications. Be prepared to discuss:

Scalability : How your design handles increasing user load, data, and features. Modularity : Breaking down a large application into smaller, manageable components. Performance : Optimizing initial load, subsequent interactions, and data fetching. Reliability/Resilience : Handling errors, network issues, and ensuring a stable user experience. Maintainability : Writing clean, testable, and understandable code. Accessibility : Integrating accessibility best practices into the design. Trade-offs : Justifying your design choices and understanding the implications of different approaches (e.g., client-side vs. server-side rendering, specific data structures, caching strategies).

Behavioral Questions & Leadership Principles (LPs) ​

Amazon heavily emphasizes its 16 Leadership Principles . A significant portion of the interview will focus on how you've demonstrated these principles in past roles, as "past behavior is the best predictor of future success."

The STAR Method is crucial. For every behavioral question, structure your answer using the STAR method:

Situation : Describe the context of the situation. Task : Explain the task or challenge you faced. Action : Detail the specific actions you took to address the task. Result : Describe the positive outcome of your actions, ideally with quantifiable metrics.

Key Leadership Principles to focus on (and have 2-3 strong STAR examples for each):

Customer Obsession Ownership Invent and Simplify Are Right, A Lot Learn and Be Curious Hire and Develop the Best Insist on the Highest Standards Think Big Bias for Action Frugality Earn Trust Dive Deep Have Backbone; Disagree and Commit Deliver Results Strive to be Earth's Best Employer Success and Scale Bring Broad Responsibility