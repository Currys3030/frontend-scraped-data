Insider tips from the GreatFrontEnd community â€‹

These tips were shared by GreatFrontEnd users who have completed interviews with Amazon.

20th May 2025 :

The code editor for Amazon is like a plain editor (developed internally), where you just write your code (canâ€™t execute code) and explain your completed code solution with some test cases. They will paste a single line of comment or if your interviewer is generous enough they will give more context to the problem. Mostly for FEE interviews they expect you to (that means they want you to) write Vanilla JS because internally Amazon uses multiple frameworks/libraries so to test the basics they mandate candidates to write in Vanilla JS and also, yes it cannot be executed. So you just write it as your interviewer likes it. Focus on the most common FEE Amazon questions from GreatFrontEnd, that list is enough, understand the problem, practice and then try to write it on a plain editor since there is no autocomplete or syntax highlighting. Also, once youâ€™re confident in your practice, sit in front of your camera and explain the problem as if youâ€™re in front of an interviewer.

5th May 2025 :

I wrapped up my 2 tech rounds with amazon for FE-2. Tech 1: Implement Infinite scroll with lots of followups. Like pagination, different device , network slowness. Error handling. Before implementing i discussed few things but not edge cases. In between there were many follow ups. I think i did okay okay in this rounds. Since I didnâ€™t discussed much on edge cases. Then 1 simple array based DSA question. Tech 2: LLD Implement a component similar to autocomplete. This was easy as i just showed it using diagram and wrote code for the same.

30th May 2025 :

Amazon FEE II Interview OA: Vanilla,js #1: Accordion by default allows one section to be open at a time. Theres a checkbox to switch behavior enabling multiple sections to expanded #2: Address book form validation (name, email, phone number) that appends valid entries to table below. Along with an input field that filters the table based on phone number.

13th Apr 2025 :

Well I bombed the front end code challenge with amazon and what makes it worse, it wasn't even hard. I got nervous and forgot how to write a json object, something I've done a million times in the last 15 years. It was simple, write a json object and parse through it recursively, having it mirror a file system. I think there's a file system traversal program in GreatFrontEnd which I've already solved.

17th Mar 2025 :

Went through 4 rounds excluding Screening. got ghosted after the 4th round. Screening: getElementsByStyle Create a Chess Grid component of n x n cells, highlight a cell on click ( Unhighlight previously selected cells), focus on reusability, extensibility, optimisations Onsite: R1 UI Coding: An image carousel component in vanilla js R2 DSA: Given a two caption strings and a similar words dict, find if the captions are same or not R3 HLD FE: Design a News website like Times of India, more focus on schema & api design and BE interation, Video rendering, showing Ads R4 HM: mostly LP questions

15th Mar 2025 :

hey all, I recently did an interview loop for Amazon (AWS) FEE L5! didn't get the job but sharing my experience here: asteroid collision (leetcode) bike sharing system design (like citibike in nyc) find most common 3-page user sequence from traffic logs bar raiser tabs component (GreatFrontEnd) Each technical round had 2BQ in the beginning, and then the bar raiser round had like 8BQ? One thing to note was that recruiter explicitly told me I could code in react, but then during the interview they restricted it to only html/css/vanilla js... not a huge issue but did differ from what my recruiter told me ðŸ˜µ

5th Mar 2025 :

Hello everyone, Iâ€™m grateful for all the help from this group! I recently received an offer for a Frontend Engineer-1 position at Amazon and wanted to share my experience. I completed my MS in Dec 2024 and had been applying for general SDE and frontend roles without much success. I applied for a Frontend position in Amazonâ€™s Early Grad Program on Jan 31, and hereâ€™s how it went: Feb 3 â€“ Received an online assessment with two JavaScript questions (an accordion and another DOM-based component) and a work-style test. Feb 7 â€“ Completed the OA and was invited to schedule my phone screen. Feb 14 (Phone Screen) â€“ First 30 mins: Behavioral questions (no follow-ups; use the STAR method with explicit metrics). Next 30 mins: Implement an image carousel (explain logic, write basic code, no need to run it). Passed and moved to the loop. Feb 21 (Loop Rounds) â€“ I was lucky in a way because only two rounds were scheduled with a 1-hour gap in between, as they couldn't find an interviewer for the middle slo. Round 1: Rotting Oranges DSA question + extensive behavioral follow-ups. My behavioral round didnâ€™t go well, and I was a bit nervous afterward. Round 2: Three behavioral questions + build a To-Do app with two easy follow-ups. Feb 26 (Final Round) â€“ The interviewer was pretty chill and asked four behavioral questions. Since I had time between my initial two interviews and this one, I was able to prepare my behavioral responses well. For the technical part, I was given a verbose array-based DSA question, where I provided both the brute force and optimized solutions. Feb 28 â€“ Received my offer! Hope this helps, and good luck to everyone interviewing.

17th Feb 2025 :

My experience for L5 FEE onsite: Implement autocomplete component System design - mobile designing for playlist page Implement json.stringify (more weight on OOP angle here) Implement method to sanitize input data from nested Form UI. All questions were on plain text editor, no need to compile and run Behavior questions before every round to cover 2 LP, and a 5th interview just for LPs

25th Jan 2025 :

okay so i just did my phone screen with amazon: 1 LP about anticipating customer needs. Some JS trivia questions, looking at css to determine specificity. that was the first 30 min. coding was just a blank text editor: to implement an infinite scroller on addresses but i didnt really recognize it was a system design question until i was already in it.

2nd Nov 2024 :

Amazon FEE II Phone interview: LP: There were five questions, though I donâ€™t remember all of them precisely. The questions is like ... going above and beyond for a customer, managing tight timelines, handling conflicts with a manager, and describing a project Iâ€™m most proud of. The interviewer mentioned that they asked several questions because I hadnâ€™t initially provided enough detail in my responses ðŸ˜¦ . Coding Challenge: implementing a table similar to the Data Table in GreatFrontEnd, with three follow-ups: Enable sorting functionality to activate when clicking on a column header. Add a search bar to filter by name.

30th Oct 2024 :

Completed my Amazon FEE-I loop a while ago. Waiting for a decision but here's how it went. LP questions - difficult customer, time when you were not satisfied with result. Didn't repeat any story but had very few of them because I'm a new grad. Make sure you have good amount of stories, try not to repeat. Technical questions - 2 implementations questions and 1 general/JS question, very similar to what others went through actually. My phone interview had an array question which was pretty simple but it took me sometime to get it. Like Button, File Explorer and print this object of objects in the form of a HTML tree. They all started with the most basic part, very barebones implementation required. If time remains, they ask you to add more stuff to it. If you go through GreatFrontEnd's questions you should be more than ready for it imo.

21st Sep 2024 :

Finished my Amazon FEE I/new grad/entry level interviews. Waiting to hear back right now, but this is what I experienced: (Caveat: my interview was for a specific team, unlike a lot of general SDE/SWE new grad interviews I've asked about where it wasn't team-specific. I'm not too sure if this equally extends to FEE normally, but that's just what ended up happening.) Behavioral : Topics mostly concentrated around the LPs of Customer Obsession, Learn and Be Curious, Ownership, and Earn Trust. Got a repeat question in one of my rounds, so I repeated one of the stories I used earlier because I don't have enough experience to have another story for that specific question ðŸ¥². Technical : Received 2 implementation questions: Like Button and File Explorer, and 1 general-ish JS question (given a form, create a function that has parses the values in the form inputs and returns the form data as an object with nested properties). The implementation questions were basically the same/easier than GreatFrontEnd's version. The JS question is a tad reminiscent of GreatFrontEnd's "get" question + knowing how to get form values. IMO I flubbed this from getting caught off-guard from how it was described, followed by my brain suddenly forgetting how to program because of the embarrassment/panic ðŸ«  Still, it was a very simple question overall that is probably fairly easy to solve. Additional Notes: Coding was in plain text editor/coderpad-style Allowed to choose any framework for the implementation q'ns Roughly 20-25min for behavioral, 30min for coding No bar raiser round. Amazon just recently announced in early August that they re-implemented this for entry-level/new grad after removing it sometime in 2022/2023, but apparently this change didn't get reflected in my specific process Result: Received the offer! ðŸ¥³

20th Sep 2024 :

hey everyone, I wanted to share my Amazon FE II onsite interviewing experience, thank you to everyone on this server and the GreatFrontEnd team Amazon FE II onsite: Behavioural: im sorry, i cant remember the questions i kinda went into autopilot during the interview but im going to go through my notes and update this if i do remember System Design: given a mock up (it was a check in app for a clinic) walk through how to create this but interviewer focused on endpoints needed to integrate frontend and backend, pagination, load balancing Coding: React frontend component 1: relative time widget, given a date create a component that displays just now, less than a minute ago, n days, n weeks, n months, n years Coding: React frontend component 2: FAQ page accordion -> additional requirements: 1000 questions, show likes of a question, what API endpoints needed, pagination Coding: React frontend component 3: Tic tac toe game, algorithm for finding winner Additional Notes: All coding rounds were done on a plain text editor I was able to choose which language/framework to use It was 30 mins behavioural, 30 mins for coding/system design Dont just wing behavioural questions, they are a big deal and factor

For more insider tips, visit GreatFrontEnd !